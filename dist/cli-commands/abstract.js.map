{"version":3,"sources":["../../src/cli-commands/abstract.es6"],"names":[],"mappings":";;;;;;;;;;;;;;IACY;;;;;;;;;;AAEZ,IAAM,wCAAwC,0CAAxC;;AAEN,IAAI,QAAQ,GAAR;AACJ,IAAI,QAAQ,GAAR;AACJ,IAAI,QAAQ,GAAR;AACJ,IAAI,UAAU,GAAV;;IAEiB;AAEjB,aAFiB,UAEjB,CAAa,SAAb,EAAwB;8BAFP,YAEO;;AAEpB,kBAAU,IAAV,EAAgB,SAAhB,EAFoB;KAAxB;;iBAFiB;;sCAQF,QAAQ;AACnB,oBAAQ,MAAR,CAAe,KAAf,CAAqB,MAArB,EADmB;;;;sCAIR,QAAQ;AACnB,oBAAQ,MAAR,CAAe,KAAf,CAAqB,MAArB,EADmB;;;;4BAIlB,OAAO,SAAS;AACjB,sBAAU,qCAAI,WAAJ,CAAe,KAAf,CAAqB,CAArB,EAAwB,IAAxB,CAA6B,GAA7B,CAAV,CADiB;AAEjB,iBAAK,aAAL,CAAmB,eAAO,SAAS,OAAT,CAAP,CAAyB,OAAzB,IAAoC,IAApC,CAAnB,CAFiB;;;;sCAKN,SAAS;AACpB,iBAAK,GAAL,CAAS,OAAT,EAAkB,KAAlB,EAAyB,qCAAI,WAAJ,CAAe,IAAf,CAAoB,GAApB,CAAzB,EADoB;;;;sCAIT,SAAS;AACpB,iBAAK,GAAL,CAAS,QAAT,EAAmB,OAAnB,EAA4B,qCAAI,WAAJ,CAAe,IAAf,CAAoB,GAApB,CAA5B,EADoB;;;;sCAIT,SAAS;AACpB,iBAAK,GAAL,CAAS,KAAT,EAAgB,KAAhB,EAAuB,qCAAI,WAAJ,CAAe,IAAf,CAAoB,GAApB,CAAvB,EADoB;;;;iCAId,SAAS;AACf,iBAAK,GAAL,CAAS,KAAT,EAAgB,KAAhB,EAAuB,qCAAI,WAAJ,CAAe,IAAf,CAAoB,GAApB,CAAvB,EADe;AAEf,oBAAQ,IAAR,CAAa,CAAb,EAFe;;;;8BAKZ;AACH,kBAAM,uBAAuB,IAAvB,EAA6B,KAA7B,CAAN,CADG;;;;WAtCU;;;;;;AA4CrB,SAAS,SAAT,CAAoB,UAApB,EAAgC,SAAhC,EAA2C;;AAEvC,WAAO,gBAAP,CAAwB,UAAxB,EAAoC;;AAEhC,mBAAW;AACP,mBAAO,SAAP;SADJ;;AAIA,iBAAS;AACL,iBAAK,eAAY;;AAEb,oBAAI,OAAO,EAAP,CAFS;;AAIb,6CAAI,QAAQ,IAAR,EAAJ,CAAkB,KAAlB,CAAwB,CAAxB,EAA2B,OAA3B,CAAmC,UAAC,GAAD,EAAS;;AAExC,wBAAI,QAAQ,IAAI,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAR,EAA0B;AAC1B,+BAD0B;qBAA9B;;AAIA,yBAAK,IAAL,CAAU,GAAV,EANwC;iBAAT,CAAnC,CAJa;;AAcb,uBAAO,IAAP,CAda;aAAZ;SADT;;KANJ,EAFuC;CAA3C;;AAgCA,SAAS,sBAAT,CAAiC,UAAjC,EAA6C,UAA7C,EAAyD;AACrD,WAAO,IAAI,KAAJ,CAAU,KAAK,MAAL,CACb,qCADa,EAEb,WAAW,WAAX,CAAuB,IAAvB,EACA,UAHa,CAAV,CAAP,CADqD;CAAzD","file":"abstract.js","sourcesContent":["import colors from 'colors/safe';\nimport * as util from 'util';\n\nconst ERROR_ABSTRACT_METHOD_NOT_IMPLEMENTED = 'Abstract method %s not implemented in %s';\n\nvar CHECK = '✔';\nvar CROSS = '✘';\nvar SKULL = '☠';\nvar WARNING = '⚠';\n\nexport default class CliCommand {\n\n    constructor (xublitCli) {\n\n        initProps(this, xublitCli);\n\n    }\n\n    writeToStdout (string) {\n        process.stdout.write(string);\n    }\n\n    writeToStderr (string) {\n        process.stderr.write(string);\n    }\n\n    log (color, message) {\n        message = [...arguments].slice(1).join(' ');\n        this.writeToStdout(colors[color || 'white'](message) + '\\n');\n    }\n\n    reportSuccess (message) {\n        this.log('green', CHECK, [...arguments].join(' '));\n    }\n\n    reportWarning (message) {\n        this.log('yellow', WARNING, [...arguments].join(' '));\n    }\n\n    reportFailure (message) {\n        this.log('red', CROSS, [...arguments].join(' '));\n    }\n\n    critical (message) {\n        this.log('red', SKULL, [...arguments].join(' '));\n        process.exit(1);\n    }\n\n    run () {\n        throw newAbstractMethodError(this, 'run');\n    }\n\n}\n\nfunction initProps (cliCommand, xublitCli) {\n\n    Object.defineProperties(cliCommand, {\n\n        xublitCli: {\n            value: xublitCli,\n        },\n\n        cmdArgs: {\n            get: function () {\n\n                var args = [];\n\n                [...process.argv].slice(3).forEach((arg) => {\n\n                    if ('-' === arg.substr(0, 1)) {\n                        return;\n                    }\n\n                    args.push(arg);\n\n                });\n\n                return args;\n\n            },\n        },\n\n    });\n\n}\n\nfunction newAbstractMethodError (cliCommand, methodName) {\n    return new Error(util.format(\n        ERROR_ABSTRACT_METHOD_NOT_IMPLEMENTED,\n        cliCommand.constructor.name,\n        methodName\n    ));\n}\n"]}