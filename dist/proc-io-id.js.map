{"version":3,"sources":["../src/proc-io-id.es6"],"names":[],"mappings":"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","file":"proc-io-id.js","sourcesContent":["export default class IoId {\n\n    constructor (ioIdStr) {\n        initAttrs(this, ioIdStr);\n    }\n\n    static uniqueIoId (applicationRoot) {\n        return new IoId(uniqueIoId(applicationRoot));\n    }\n\n}\n\nfunction initAttrs (ioId, ioIdStr) {\n\n    Object.defineProperties(ioId, {\n\n        value: {\n            value: ioIdStr,\n        },\n\n        stdinFilename: {\n            value: stdinFilenameForIoId(ioId),\n        },\n\n        stdoutFilename: {\n            value: stdoutFilenameForIoId(ioId),\n        },\n\n        stderrFilename: {\n            value: stderrFilenameForIoId(ioId),\n        },\n\n    });\n\n}\n\nfunction createRandomIoId () {\n    return randomHexToBase64().replace(/[\\+\\/=]/g, '');\n}\n\nfunction randomHexToBase64 () {\n    \n    var randomHex = Math.random().toString().replace('.', '');\n    \n    if (1 === randomHex.length % 2) {\n        randomHex = randomHex + '0';\n    }\n    \n    randomHex = new Buffer(randomHex, 'hex');\n    \n    return randomHex.toString('base64');\n\n}\n\nfunction stdinFilenameForIoId (ioIdStr) {\n    return '.' + ioIdStr + '.in.tmp';\n}\n\nfunction stdoutFilenameForIoId (ioIdStr) {\n    return '.' + ioIdStr + '.out.tmp';\n}\n\nfunction stderrFilenameForIoId (ioIdStr) {\n    return '.' + ioIdStr + '.err.tmp';\n}\n\nfunction uniqueIoId (targetDirectory) {\n\n    var IO_ID_NOT_AVAILABLE = 'IO_ID_NOT_AVAILABLE';\n    var ITERATION_LIMIT_REACHED = 'ITERATION_LIMIT_REACHED';\n\n    var availableIoId;\n    var i = iterationCount(arguments);\n    var newIoId = createRandomIoId();\n\n    if (iterationLimitExceeded()) {\n        throw ITERATION_LIMIT_EXCEEDED;\n    }\n\n    try {\n        assertAvailable();\n        availableIoId = newIoId;\n    } catch (error) {\n\n        if (error instanceof Error) {\n            throw Error;\n        }\n\n        switch (error) {\n            case IO_ID_NOT_AVAILABLE:\n                availableIoId = newIoId(targetDirectory, i);\n                break;\n            case ITERATION_LIMIT_EXCEEDED:\n                throw new Error(\n                    'Iteration limit exceeded before available I/O ID was found'\n                );\n                break;\n        }\n\n    }\n\n    return availableIoId;\n\n    function assertAvailable () {\n        if (inFileExistsForIoId()) {\n            throw IO_ID_NOT_AVAILABLE;\n        }\n    }\n\n    function inFileExistsForIoId () {\n        return targetDirectory.containsFile(stdinFilenameForIoId(newIoId));\n    }\n\n    function iterationLimitExceeded () {\n        return i[0] > i[1];\n    }\n\n    function iterationCount (args) {\n\n        var numArgs = args.length;\n        var lastArg = args[numArgs-1];\n\n        if (1 === numArgs) {\n            return { current: 1, max: 10 };\n        }\n\n        return args[1];\n\n    }\n\n}\n"]}