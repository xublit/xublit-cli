{"version":3,"sources":["../../src/file-system/directory.es6"],"names":[],"mappings":"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","file":"directory.js","sourcesContent":["import File from './file';\n\nimport * as path from 'path';\nimport * as sh from 'shelljs';\n\nexport default class Directory {\n\n    constructor (absPath) {\n\n        absPath = path.resolve(absPath);\n\n        initDirIfNotExists(absPath);\n\n        initProps(this, absPath);\n\n        this.parseContents();\n\n    }\n\n    absolutePath () {\n        return path.join(this.absPath, ...arguments);\n    }\n\n    assertDoesNotContain (handle) {\n\n        if (!this.contains(handle)) {\n            return;\n        }\n\n        throw new Error(util.format(\n            '\"%s\" already exists', handle\n        ));\n\n    }\n\n    parseContents () {\n\n        var dirContents = ls(this.absPath);\n\n        dirContents.forEach((item) => {\n\n            var itemBasename = path.basename(item.name);\n\n            if (item.isFile()) {\n                return this.files.push(itemBasename);\n            }\n\n            if (item.isDirectory()) {\n                return this.subdirs.push(itemBasename);\n            }\n\n        });\n\n    }\n\n    clearParsedContents () {\n        this.files.splice(0, this.files.length);\n        this.subdirs.splice(0, this.subdirs.length);\n        return this;\n    }\n\n    contains (handle) {\n        return this.containsFile(handle) ||\n            this.containsDir(handle);\n    }\n\n    containsDir (handle) {\n        return this.subdirs.indexOf(handle) > -1;\n    }\n\n    containsFile (handle) {\n        return this.files.indexOf(handle) > -1;\n    }\n\n    file (handle) {\n        \n        if (!this.containsFile(handle)) {\n            return undefined;\n        }\n\n        if (handle in this.cachedFiles) {\n            return this.cachedFiles[handle];\n        }\n\n        return this.cachedFiles[handle] = new File(\n            this.prefixPath(handle)\n        );\n\n    }\n\n    mkfile (handle) {\n\n        this.assertDoesNotContain(handle);\n\n        sh.touch(this.prefixPath(handle));\n\n        this.files.push(handle);\n\n        return this.file(handle);\n\n    }\n\n    mksubdir (handle) {\n\n        this.assertDoesNotContain(handle);\n\n        sh.mkdir(this.prefixPath(handle));\n\n        this.subdirs.push(handle);\n\n        return this.subdir(handle);\n\n    }\n\n    prefixPath (handle) {\n        return path.join(this.absPath, handle);\n    }\n\n    recursiveLs (subdir) {\n        return sh.ls('-R', this.absolutePath(subdir)).map((relativePath) => {\n            return path.join(subdir, relativePath);\n        });\n    }\n\n    refresh () {\n\n        this.clearParsedContents()\n            .parseContents();\n\n        return this;\n\n    }\n\n    subdir (handle) {\n        \n        if (!this.containsDir(handle)) {\n            return undefined;\n        }\n\n        if (handle in this.cachedSubdirs) {\n            return this.cachedSubdirs[handle];\n        }\n\n        return this.cachedSubdirs[handle] = new Directory(\n            this.prefixPath(handle)\n        );\n\n    }\n\n    toString () {\n        return this.absPath;\n    }\n\n}\n\nfunction initDirIfNotExists (absPath) {\n\n    if (sh.test('-d', absPath)) {\n        return;\n    }\n\n    try {\n        sh.mkdir(absPath);\n    }\n    catch (err) {\n        throw new Error(util.format(\n            'Failed to initialise directory %s: %s', absPath, err.message\n        ));\n    }\n\n}\n\nfunction initProps (directory, absPath) {\n\n    var cachedFiles = {};\n    var cachedSubdirs = {};\n\n    var basename = path.basename(absPath);\n\n    var files = [];\n    var subdirs = [];\n\n    Object.defineProperties(directory, {\n\n        basename: {\n            value: basename,\n            enumerable: true,\n        },\n\n        absPath: {\n            value: absPath,\n            enumerable: true,\n        },\n\n        cachedFiles: {\n            value: cachedFiles,\n        },\n\n        cachedSubdirs: {\n            value: cachedSubdirs,\n        },\n\n        files: {\n            value: files,\n            enumerable: true,\n        },\n\n        subdirs: {\n            value: subdirs,\n            enumerable: true,\n        },\n\n    });\n\n}\n\nfunction ls (dirname) {\n    return sh.ls('-Al', dirname);\n}\n"]}